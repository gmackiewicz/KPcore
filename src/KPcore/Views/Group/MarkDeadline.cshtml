@model MarkDeadlineViewModel

@{
    ViewData["Title"] = "MarkDeadline";
}

<div class="title">
    <h2>@ViewData["Title"].</h2>
    <p class="text-success">@ViewData["StatusMessage"]</p>
    <hr />
</div>
<form asp-action="MarkDeadline">
    <div class="form-horizontal custom-form">
        <h4>Termin: @Model.DateAndTime.</h4>
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        @Html.TextBoxFor(m => m.Id, new { type = "hidden" })
        @Html.TextBoxFor(m => m.GroupId, new { type = "hidden" })
        @Html.TextBoxFor(m => m.TopicId, new { type = "hidden" })
        @Html.TextBoxFor(m => m.DeadlineDate, new { type = "hidden" })
        <span asp-validation-for="Mark" class="text-danger"></span>
        <div class="form-group">
            <label asp-for="Mark" class="control-label"></label>
            <div>
                <input asp-for="Mark" class="form-control" />
            </div>
        </div>

        <span asp-validation-for="Comment" class="text-danger"></span>
        <div class="form-group">
            <label asp-for="Comment" class="control-label"></label>
            <div>
                <input asp-for="Comment" class="form-control" />
            </div>
        </div>
        <div class="form-group">
            <input type="submit" value="Zatwierdź" class="btn btn-success" />
            @Html.ActionLink("Anuluj", "Details", "Topic", new { id = Model.TopicId }, new { @class = "btn btn-danger" })
        </div>
    </div>
</form>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
